name: dotnet-playwright-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      CI: true               # إشارة لبيئة CI (يقرأها الكود عند الحاجة)
      PW_TIMEOUT: 45000      # (اختياري) مهلة افتراضية لو تقرئينها من Environment

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build (Release)
        run: dotnet build -c Release --no-restore

      # تثبيت متصفحات Playwright لمشروع C# (على لينكس)
      - name: Install Playwright browsers
        shell: pwsh
        run: |
          $ps1 = "$(Get-ChildItem -Path ./PlaywrightTests/bin/Release -Recurse -Filter playwright.ps1 | Select-Object -First 1).FullName"
          if (-not $ps1) { throw "playwright.ps1 not found under ./PlaywrightTests/bin/Release" }
          & $ps1 install --with-deps

      # (اختياري للتشخيص) ابحثي عن TestBase.cs
      - name: Locate TestBase.cs (debug)
        run: |
          echo "Searching for TestBase.cs …"
          git ls-files | grep -i 'TestBase.cs' || true

      # أنشئي مجلد الـ artifacts مسبقًا
      - name: Prepare artifacts dir
        run: mkdir -p PlaywrightTests/artifacts

      # شغّلي الاختبارات وسجّلي اللوج لملف
      - name: Test
        run: |
          set -o pipefail
          dotnet test -c Release --no-build \
            --logger "trx;LogFileName=test_results.trx" \
            --results-directory PlaywrightTests/artifacts \
          | tee PlaywrightTests/artifacts/test.log

      # ارفعي النتائج دائمًا (حتى لو فشل)
      - name: Upload test results (TRX + logs + traces)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            PlaywrightTests/artifacts
            **/trace*.zip
            **/playwright-report/**/*
          if-no-files-found: warn

      # عند الفشل اطبعي شجرة المجلدات للمساعدة
      - name: Dump tree on failure
        if: failure()
        run: |
          echo "=== repo tree (top 3 levels) ==="
          find . -maxdepth 3 -type d -print
